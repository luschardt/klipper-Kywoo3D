# !Tycoon Slim
# printer_size: 240x240x300 Displays information on the Creality Sonic Pad

###fluidd set
####======>Do not modify this configuration
[virtual_sdcard]
path: ~/gcode_files

[display_status]

[gcode_macro G29]
gcode:
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200
  # save_config

[gcode_macro PAUSE_PARK]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set r = params.R|default(3)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE
    {% if r > 0.0 %}
      RETRACT D={r}
    {% endif %}
    G27 X{x} Y{y} Z{z}
  {% endif %}

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[include timelapse.cfg]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None
spi_speed: 2000000
spi_bus: spidev2.0

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 70
probe_points:
    117.5,117.5,10

[verify_heater extruder]
check_gain_time: 200
hysteresis: 5

#####<======Do not modify this configuration


#####======>Please configure according to different printer models

[duplicate_pin_override]
pins: PC7, PC8, PC9, PC14 #Reuse Z-Stepper pins to drive the stepper manually and Z-Max Sensor pin

[stepper_x]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: PA15
position_min: -14
position_endstop: -14
position_max: 240
homing_speed: 80

[stepper_y]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: PA12
position_endstop: 240
position_max: 240
homing_speed: 80

[stepper_z]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB8
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop # Use Z- as endstop
position_min: -4
position_max: 300
homing_speed: 30

[filament_switch_sensor filament_runout_sensor]
switch_pin: PA4
pause_on_runout: false
runout_gcode: M600

[extruder]
step_pin: PD6
dir_pin: PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 34.400
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
control: pid
pid_Kp: 14.669
pid_Ki: 0.572
pid_Kd: 94.068
min_temp: 0
max_temp: 250


[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10
min_temp: 0
max_temp: 130

[heater_fan hotend_fan]
pin: PB0
shutdown_speed: 0
heater: extruder
heater_temp: 60
fan_speed: 1.0

[fan]
pin: PB1

#aqui vc vai precisar validar o ID do seu USB
[mcu]
serial: /dev/serial/by-id/usb_serial_1                          
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 10000
max_z_velocity: 5
max_z_accel: 100

[force_move]
enable_force_move: True

[bltouch]
sensor_pin: ^PA11
control_pin: PA8
x_offset: 29
y_offset: 0
z_offset: 0
speed: 3
samples: 2
pin_up_touch_mode_reports_triggered: False

[bed_mesh]
mesh_min: 20, 20
mesh_max: 220, 230
probe_count: 5, 5
algorithm: bicubic
speed: 120

[safe_z_home]
home_xy_position: 120, 120
speed: 100
z_hop: 10
z_hop_speed: 5

[pause_resume]
recover_velocity: 25